/*
 * 	객체지향프로그램(OOP)
 * 	1. 독립적으로 작동이 가능하게 실행
 * 	   ----------
 * 		1) 변수 2) 메소드 => 모아서 연결
 * 						 --------- 객체
 * 						 --------- 설계 => 클래스
 * 		=> 기계 : 부품(객체) => 조립 (객체를 조립)
 *  						---재사용
 *  	=> 부품(컴포넌트) => 컴포넌트 여러개를 묶어서 조립
 *  					 -------------------- 컨테이너
 *  2. 변수가 많거나 소스가 길어지면 분석하거나 수정하기 어렵다
 *  	=> 보완 : 동일한 목적,기능을 수행하는 변수나 메소드를 묶어서 한 개의 파일을 제작(객체)-객체끼리 상호통신(메소드)후 전체 프로그램을 제작
 *  	예) 컴퓨터 조립
 *  		cpu / hdd / 그래픽카드 / 메모리... => 객체
 *  		---------------------------
 *  			| 메인보드 (조립)
 *  		사이트
 *  		회원 / 예약 / 구매(장바구니) / 커뮤니티
 *  		------------------------------
 *  		메인페이지에서 연결 => 메뉴
 *  
 *  	객체지향 프로그램 특징
 *  	---------------
 *  	1. 회원관련 ... 사용자 데이터 보안(데이터보호)	=> 캡슐화(정보은닉화)
 * 		=> 접근지정어(제어어)
 * 			public / protected / private / default
 *  	2. 사이트 => 커뮤니티(공지사항,묻고답하기,자유게시판) => 재사용(: 필요시 수정-추가 가능)
 *  											   ---- 상속 / 포함
 *  													---   ---
 *  										메소드 변경(가능)|		|있는 그대로 사용
 *  								 extends : 확장된 클래스
 *  	3. 재사용 => 수정, 요청에 따른 추가 기능 => 다형성
 *  			  ---- ----------------
 *  		 오버라이딩|		 |오버로딩(new)
 *  기존의 기능 변경>상속 :
 *  => 상속 : 중복제거 => 메모리를 효율적으로 사용한다는 장점 / 속도가 느리고 영향력이 크다는 단점
 *  
 *   1) 용어
 *   	객체
 *   	크래스
 *   	멤버변수
 *   	공유변수
 *   	생성자	
 *   	메소드
 *   ---------------------------------
 *   	클래스 => 객체를 사용하기 위한 설계
 *   	형식)	
 *   		[접근지정어][제어어]class className
 *   		{
 *   			클래스 블럭에서 선언 => 다른클래스에서도 사용가능
 *   			-----------------------------
 *   			객체생성시마다 따로 메모리에 저장되는 변수
 *   			---------new 생성자()
 *   			=> 멤버변수 : Heap => 다른 데이터형을 모아 저장
 *   			
 *   			메모리 공간을 한개만 만들어서 공유
 *   			=> 공유변수 => static
 *   			   ----- 영화-음악 목록/회원관리등
 *   			   ----- 오라클 => 공유할 목적
 *   			-----------------------------
 *   			변수에 대한 초기화 => 생성자
 *   			------------- 없는 경우 : 생성자 생략
 *   			*** 생성자가 없는 경우 컴파일러가 자동으로 생성
 *   		}
 */
class member
{
	//자동으로 초기화된다=> 필요시 명시적 초기화
	//				  --------------- 우선순위
	//					불가능한 경우 : 쿠키 읽기, 파일읽기, 데이터베이스 연동 >> 생성자, 초기화블럭 이용
	//					클래스 블럭 안에서는 선언만 가능(구현부(제어문,연산처리,라이브러리) 사용불가)
	String id;
	String name;
	//생성자가 추가된 상태
}
class membersystem
{
	static member[] members=new member[10];
}
public class 클래스_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		membersystem ms1=new membersystem();
		ms1.members[0]=new member();
		ms1.members[0].id="hong";
		ms1.members[0].name="홍길동";
		
		System.out.println(ms1.members[0].id);
		System.out.println(ms1.members[0].name);
		
		membersystem ms2=new membersystem();
	//	ms2.members[0]=new member();
		System.out.println(ms2.members[0].id);
		System.out.println(ms2.members[0].name);

	}

}
