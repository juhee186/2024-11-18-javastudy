/*
 *   자바에서 지원하는 제어문 
 *     > 프로그램의 흐름 변경 (흐름제어)
 *        1. 필요시 건너뛰는 프로그램을 만들 수 있다 : 조건문
 *        2. 반복수행을 요청할 수 있다 : 반복문
 *        3. 중간에 정지 시킬 수 있다 : 반복제어문  >esc
 *        
 *   1) 조건문
 *      - 단일조건문
 *         -- 마우스클릭, 버튼클릭, 상세보기
 *      - 선택조건문 :  참/거짓을 나눠서 처리
 *      - 다중 조건문 
 *         -- 메뉴
 *   2) 선택문
 *      - switch~case : 값을 1개만 선택해서 처리한다
 *         -- 게임 : 키값에 따라 처리
 *   3) 반복문
 *      - while
 *      - do~while
 *      - for
 *   4) 반복제어문
 *      - break
 *      - continue : 특정부부을 제외한다
 *      
 *      
 *      
 *    1. 조건문(54페이지)
 *       - 자바
 *         : 형식
 *         : 코딩순서, 동작순서
 *         : 활용
 *         : 응용
 *         
 *    2. 단일조건문
 *        *** 자바의 모든 제어문은 바로 밑에 있는 문장 1개만 수행한다
 *        여러개를 동시에 제어할 때는 {}을 이용한다
 *         if(조건문)
 *          문장1     >> if에서 제어
 *          -------------
 *          문장2
 *          문장3
 *          ------------- 별도의 문장
 *          if(조건문)
 *          {
 *           문장1
 *           문장2
 *           문장3     >> 3문장이 동시에 제어
 *          }
 *          
 *        형식)
 *             > 연산자 : 부정연산자 / 비교연산자 / 논리연산자
 *             > 결과값이 참-거짓만
 *         if(조건문) 
 *         {
 *          실행문장  >>>>>> 조건이 참일때만 수행 / 거짓일 때 건너뛴다
 *         } 
 *           => 단점 : 여러개 사용시 모든 if문의 조건을 확인해야 처리가 가능하므로 속도가 느리다
 *           
 *           1~100
 *            3의 배수 15 21
 *            5의 배수 15
 *            7의 배수    21
 *                 > 중복된 값이 있다면 단일조건문을 사용해야한다 
 *           
 *           
 */
public class 자바제어문 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int score=30;
		if(score>=60)
		{
			System.out.println("합격"); // 거짓값일 때 출력치않는다
		    System.out.println("프로그램종료");  //if문과 관련없는 실행문장
		}   // 여러문장을 동시에 제어 할때는 {} 묶는다

		
		
		

	}

}
