/*
 *  자바에서 제공하는 제어문
 *  =조건문
 *   형식) 단일조건문 : 독립적으로 사용
 *   if(조건문) >>조건문 : 참/거짓
 *                     ====== 부정연산자, 논리연산자, 비교연산자
 *   {
 *    조건이 참일 때 처리 > 거짓일 때 실행하지 않는다
 *   }
 *   선택조건문 = 참/거짓을 나눠서 처리
 *    *** 웹에서 가장 많이 사용되는 조건문
 *    *** 조건문 만드는 연습 많이
 *    *** 기본 사이트 제작 >jsp(mvc) / spring / springboot
 *        => django
 *   if(조건문) >> 로그인이 된 경우, 실패한 경우
 *   {
 *    조건이 참일때 처리
 *   }
 *   else
 *   {
 *    조건이 거짓일 때 처리
 *   }
 *   다중조건문 : 조건이 여러개 > 해당조건만 출력     >>메뉴,화면찾기
 *   if(조건문) ==> page=1
 *   {
 *    조건이 참일 때 처리  >> 수행  후 종료  / 거짓일 경우 밑의 문장 수행
 *    A로 이동
 *   }
 *   else if(page=2)
 *   {
 *   조건이 참일 때 처리  >> 수행  후 종료  / 거짓일 경우 밑의 문장 수행
 *   B로 이동...
 *   }
 *   else if(page=3)
 *   {
 *   조건이 참일 때 처리  >> 수행  후 종료  / 거짓일 경우 밑의 문장 수행
 *   C로 이동...
 *   }
 *   else 
 *   {
 *    해당조건이 없는 경우 처리
 *   }
 *  = 선택문
 *   switch(정수/문자/문자열)
 *         => 문자 ==> '' ==> char
 *         => 문자열 ==> "" ==> String
 *         ** 윈도우 / 웹 > 송수신하는 모든 데이터는 String
 *           => 다른 데이터형이 필요할 때는 변경해야한다.
 *           =>Interger.parseInt("10") => 10
 *             Double.parseDouble("5.0") => 5.0
 *             Byte / Boolean => Wrapper
 *           => char[] => 제어 => String
 *   switch(정수/문자/문자열)
 *   {
 *    case 값1:
 *     수행문장
 *     break;
 *    case 값2:
 *     수행문장
 *     break;
 *    default;
 *     수행문장  
 *   }      
 *    => 무조건 break 를 사용하는 것은 아니다    
 *        => 같은 수행문장을 수행할 때는 break 를 사용하지 않는다
 *    => case에 중복된 데이터는 사용할 수 없다
 *        => 다중조건문으로 변경이 가능    
 *  = 반복문 => 중복제거
 *   = for : 횟수가 지정된 경우 => 웹 화면 UI
 *   	for(1.초기값;2.조건식;4.증감식)
 *   	{	1. 초기값 먼저 2.조건식이 참일때 3.수행문장>4.증감식/ 2.조건식이 거짓일때 종료
 *   		3.반복수행문장
 *   	}
 *   	1 > 2 > 3 > 4 > 2 > 3 > 4
 *          ---------   --------- > 2.조건문이 거짓일때까지 반복
 *      => 가장 많이 사용되는 반복문
 *      => 웹에서는 특별한 경우가 아니면 이중 for문을 사용하지 않는다
 *      => 웹 : 송수신
 *             어떤 값을 보낼지 / 받을건지   
 *              => 연습 : 네트워크(웹) 
 *   = while : 횟수 지정이 없는 경우 => 데이터베이스/파일읽기
 *     => 먼저 조건 검색 => 한번도 실행을 안 할 수 있다
 *     1.초기값
 *     while(2.조건문)
 *     {		= 참 >> {}안으로 진입 / 3.반복수행문장 > 4.증감식
 *     			= 거짓 >> 종료
 *     	3.반복수행문장
 *      4.증감식
 *     }
 *     => while(true)
 *     {
 *     	 반복수행문장
 *        => 종료하는 조건 반드시 작성
 *           => 게임 : ESC 종료
 *     }
 *   =do~while : while문과 동일 => 후조건 검색  => 한 번은 무조건 실행
 *    1.초기값
 *    do
 *    {
 *      2.반복수행문장        => 무조건 1번은 수행한다
 *      3.증감식
 *    }while(4.조건식);  => 거짓이면 종료
 *   =반복제어문
 *    =break : 반복문 종료
 *             for,while,do~while => 무조건 종료
 *             =>switch, 반복문 사용
 *    =continue : 특정부분을 제외시 사용
 *             for : 증가식으로 이동
 *             while : 조건식으로 이동 > 무한루프 문제발생위험 있음
 *             => 반복문에서만 사용
 *    ***소속 반복문만 제어
 *    outer:for()
 *    {
 *    	for()
 *    	{
 *    		break;  // break outer;
 *      }
 *    }  
 *     
 *    ★☆☆☆★
 *    ☆★☆★☆
 *    ☆☆★☆☆ 
 */
public class 제어문정리_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		for(int i=1;i<=5;i++)
		{
			for(int j=1;j<=5;j++)
			{
				if((i==j) || (6-i==j))
				{
				System.out.print("★");
				}
				else
				{
					System.out.print("☆");
				}
			}
			System.out.println();
			}
			
		}
	}

