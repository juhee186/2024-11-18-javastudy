/*
 * 프로그램 작성법
 * 
 *  아이템 --- 벤치마킹 --- 요구사항분석 --- 데이터베이스 설계
 *                         - 어떤 데이터
 *                         - 어떤 기능
 *  
 *  화면 UI --- 기능 구현 --- 테스트 --- 배포
 *  
 *                
 *  1. 프로그램에 필요한 데이터 저장
 *     > 한개씩 매모리에 저장 - 변수
 *      - 변수 : 메모리에 저장되는 공간의 이름
 *          === 읽기 (데이터 가져오기)
 *          === 쓰기 (데이터 저장) > 수정은 가능 > RAM(프로그램 종료시 삭제됨)
 *       메모리
 *      0=== 사용중
 *      4=== 사용중
 *      8===  10 저장  ---> 별칭a : 저장위치 알아볼 수 있게 별칭 사용
 *     12===
 *     ..===
 *     
 *      변수
 *      ==== 기본 4바이트 메모리 -> 메모리 합쳐 큰 데이터 들어갈 수 있음
 *      ==== 1바이트 저장시 알아서 메모리를 쪼개줌
 *      ==== 1바이트  > 8비트 > 비트는 0,1을 채워주는 역할
 *        =======================
 *         부호비트ㅣ ㅣ ㅣ ㅣ ㅣ ㅣ ㅣ
 *        =======================
 *          ㅣ  
 *       1 :음수
 *       0 :양수
 *       64 32 16 8 4 2 1  > 127까지 사용가능
 *        0  1  1 1 1 1 1
 *      ==== 2바이트  > 16비트 > 32767까지 사용가능    
 *      ==== 4바이트  > 32비트 > 21억 4천
 *      ==== 8바이트  > 64비트 
 *      
 *       ex 100저장  
 *      ============ 데이터형
 *      변수선언
 *      ============ 데이터형 변수명
 *      > 저장할 메모리 크기 생성 > 별칭을 변수
 *      > 변수 : 한개의 데이터를 저장하는 메모리 주소의 이름
 *      > 변수 없는 프로그램은 존재하지 않음
 *               ==========================
 *               프로그램 : 변수 / 연산자 / 제어문
 *               ========================== 관련된 내용을 묶어 사용
 *               ( 입력 / 처리 / 결과 > 메소드 ) => 클래스
 *      
 *     자바에서 지원하는 기본형 / 데이터형 / 자료형
 *      1) 정수 저장
 *       1바이트 : byte > 파일 읽기 / 네트워크 전송
 *        저장하는 범위 : -128 ~ 127
 *       2바이트 : short > C언어 호환 문제 > 거의 사용 빈도 없음
 *        저장하는 범위 : -32768 ~ 32767
 *       4바이트 : int > 기본 : 컴퓨터는 모든 정수를 int로 인식 (정수의 디폴트)
 *         ex.   system.out.println(1000);    ====>  int
 *        저장하는 범위 : -21억4천 ~ 21억 4천  
 *       8바이트 : long > 금융권 / 증권/ 공기업
 *      
 *      2) 실수 저장
 *       float : 4바이트 > 소수점 6자리
 *       double : 8바이트 > 소수점 15자리
 *                컴퓨터에서는 디폴트 ( 모든 실수는 double) 로 인식
 *      
 *      3) 문자 저장
 *       char : 2바이트 ( 멀티바이트 > unicode),  0~6555 사용
 *                      1바이트 > 싱글바이트 > ASC, 
 *                      0~255문자 사용 > C,C++
 *                      브라우저 : C
 *                      > 한글은 1글자당 2바이트
 *                      
 *      4) 논리(true , false)
 *       true : 1
 *       false : 0
 *       
 *     자바 기본형
 *     로또 :  당첨금 > long
 *     > 재사용 
 *     ===============================================
 *                정수        실수        문자      논리
 *     ===============================================
 *     1바이트     byte                        bloolean
 *             -128~127                     true/false
 *     ===============================================
 *     2바이트     short                char
 *           -32768~32767            0~65535
 *     ===============================================
 *     4바이트    int      float(6자리)
 *         -21억4천~21억4천
 *     ===============================================
 *     8바이트  long      double(15자리)
 *            2^63
 *     ===============================================
 *     
 *      * 구분
 *       int / long >  숫자끝(1,L) 10L
 *       float / double > 실수(f,F) 10.5F > float
 *                                 10.5D > double (D 생략가능)   
 *                                 
 *      * 큰 데이터형은 작은 값을 받으 수 있으나 작은 데이터형은 큰 값을 받을 수 없다.
 *       
 *      long = int
 *      int = long 오류발생
 *      double = int 
 *      
 *      데이터형 크기
 *      byte < short / char < int < long < float < double
 *      
 *      정수보다는 실수가 크다 (바이트 크기로 결정되지 않는다)
 *      
 *      
 *  2. 저장 된 데이터 활용
 *  3. 결과물 출력
 *  
 *  
 *  1. 변수 > 선언
 *      데이터형 변수명;
 *  2. 초기값 설정
 *      변수명=값
 *  3. 변경 가능
 *      변수명=값
 *  4. 출력 가능
 *      system.out.println(변수명)
 *      
 *    1) 변수를 만드는 방법
 *       -> 알파벳이나 한글로 시작
 *         단, 알파벳은 대소문자를 구분한다 ex a A  다르다
 *       -> 숫자 사용 가능
 *         단, 앞에 사용할 수 없다  ex 1A (x), A1 (0) 
 *       -> 특수문자 사용 가능 (_ , $)
 *         주로 _ 사용
 *         단어 2개 ex kor_score
 *         임시변수 ex _kor 
 *       -> 키워드 사용불가
 *         키워드는 자바에서 사용하는 단어 (붉은 글씨)
 *       -> 공백 사용불가
 *         ex file name
 *       -> 문법(X) > 소문자로 시작
 *       -> 문자의 길이는 상관없으나 3~7글짜가 적당
 *       -> 데이터 저장(변수부터)
 *      
 *     2) 선언하는 방식
 *      int a;
 *      int b;
 *      int c;
 *      int d;
 *      int e; 
 *  
 *     > int a,b,c,d,e;
 *     변수 : 메모리 저장 공간 > 변경이 가능함
 * 
 * */

public class 변수_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
