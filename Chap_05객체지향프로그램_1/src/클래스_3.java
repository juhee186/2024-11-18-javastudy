/*
 *	프로그램  ============================= 저장 ========================== 화면 UI ================== 구현 ===========테스트 ===배포
 *	요구사항 분석							데이터베이스																 |	 	 |
 *	(벤치마킹)																									  단위테스트    발표(더블클릭)
 *	   |																										 |
 *	 기능설정																										디버깅
 *	 필요한 데이터 추출
 *	 =============					  ===============				===============				=========
 *	   |									|							  출력					클래스와 클래스 연결
 *	 클래스 설계							 메모리 할당													  |	
 *	 => 메소드							  => new													클래스 다이어그램
 *	 => 변수									 |
 *		 |									 |
 *	유스케이스 다이어그램							정규화
 *
 *	객체: 현실세계에 있는 모든 사물 (object) => OOP
 *		-------------------
 *			| 단순화( 시물레이션) => 가정
 *			  ---- 추상화 : 누구나 생각하는 공통된 데이터 추출
 *				| 개발자만 알아보면 된다
 *	예) 사원관리
 *	   ------
 *		사번 . 이름 . 부서명 . 직위 . 입사일 . 근무지 . 연봉 . 성과급 => 멤버변수
 *		출근여부 . 영업 . 점심 => 메소드
 *	
 *		변수 추출 => 기능 추출 => 구현 => 사용
 *				   | 추루 기능 추가,수정
 *		=> 클래스는 사원 => 1명에 대한 정보를 가지고 있다
 *		=> 컴퓨터 => 1개만 설계
 *		=> 영화.레시피 => 1개만 설계
 *				
 */
// 변수 > 기본형 배열 클래스
// 평점, 구분번호, string, actor
/*
 * 		1. 클래스의 구성요소
 * 		class classname
 * 		{
 * 		-----------------
 * 		변수
 * 		1. 변수의 종류
 * 			=인스턴스변수(객체변수)
 * 			new 이용해서 메모리 따로 저장
 * 			인스턴스 : 메모리에 데이터가 저장된 상태
 * 			객체=인스턴스
 * 			=공통변수(정적변수)
 * 			모든 객체가 공통으로 사용하는 변수
 * 			=> 메모리 공간이 한개
 * 		-----------------
 * 		생성자
 * 		-----------------
 * 		메소드		
 * 		-----------------
 * 		}
 * 
 * 		=> new : 클래스의 메모리 크기 확인 후 메모리 할당
 * 									  -------- 메모리공간 생성
 * 											   사용된 주소값을 객체에 넘겨준다
 * 		=> 생성자 : 변수의 초기값을 대입 => 메모리에 초기값을 넘겨준다
 * 			
 * 		=======> new 생성자()
 * 
 * 		class classA
 * 		{
 * 			int aa;   >> 0
 * 			double dd; >>0.0
 * 			static char cc;  >> '\0'
 * 		}
 * 
 * ----cc----
 * 	  '\0'			===> a,b 둘 다 사용 가능 => 로고, 명칭(학교명, 학원명..) 등
 * ----------					 ---- 읽기 | 쓰기 | 변경 => 공통메모리 (공유메모리)
 * 								
 * 		A a=new A();  => 메모리 생성
 * 		---
 * 		----a----
 * 		   100 ====> 해당 주소에 있는 데이터만 접근 가능
 * 		---------	100-----------------======>a.aa  a.dd
 * 						-----aa-----
 * 							 0
 * 						------------
 * 						-----dd-----
 * 							 0.0
 * 						------------
 * 					--------------------
 * 
 * 		A b=new A();  => 메모리 생성
 * 		---
 * 		----b----
 * 		   200 ====> 해당 주소에 있는 데이터만 접근 가능
 * 		---------	200-----------------======>b.aa  b.dd
 * 						-----aa-----
 * 							 0
 * 						------------
 * 						-----dd-----
 * 							 0.0
 * 						------------
 * 					--------------------
 * 
 * 		new => 사용시마다 클래스 크기만큼 메모리 생성
 * 	   ------------------------------------
 * 		1. 클래스는 한개만 설계
 * 		2. new 여러개를 저장해서 사용
 * 		3. 사용자 정의 클래스 > 일반 변수와 동일
 * 		   ------------- 사용자 정의 데이터형 : 배열,읽기-쓰기 가능, 변경가능
 * 
 * 	----------------------------------------------------------------------------
 * 	종류				메모리		메모리	  저장위치		 사용범위		 사용방법
 * 				   저장시점	   해제시점
 * 	-----------------------------------------------------------------------------
 * 	인스턴스변수	  new 이용해서	   프로그램	   Heap		클래스 전체		객체명.변수명
 * 					 저장			종료					다른 클래스
 * 	-----------------------------------------------------------------------------
 * 	정적변수(공유변수) 컴파일시 자동    프로그램	methodArea  클래스 전체		클래스명.변수명
 * 				  메모리 할당		종료					다른 클래스
 * 				  한개만 생성
 * 	-----------------------------------------------------------------------------
 * 	지역변수		  메소드 호출시   메소드 종료 	 	Stack		{}			변수명
 * 				=>매개변수 포함
 * 	-----------------------------------------------------------------------------
 */
import java.text.DecimalFormat;
class re2
{
	String poster; //null
	String title; //null
	String chef; //null
	String chefpo; //null
	int star; //0
	int hit; //0
}
public class 클래스_3 {
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 1. 레시피 저장
		// 1. 메모리할당
		re2 re1=new re2();
		re1.poster="https://recipe1.ezmember.co.kr/cache/recipe/2024/11/24/565de119b099835a80ffdfc4006583621_m.jpg";
		re1.title="치킨너겟 교촌 허니콤보 만들기";
		re1.chef="태형제맘";
		re1.chefpo="https://recipe1.ezmember.co.kr/cache/rpf/2024/10/24/1455cb2a66c286ac31d1c570f1276de11.jpg";
		re1.hit=1845;
		re1.star=5;
		
		System.out.println("레시피 포스터: "+re1.poster);
		System.out.println("레시피 제목: "+re1.title);
		System.out.println("셰프명: "+re1.chef);
		System.out.println("셰프 포스터 : "+re1.chefpo);
		
		//정수 => 변경
		DecimalFormat df= new DecimalFormat("###,###");
		System.out.println(df.format(re1.hit));
		for(int i=1;i<=re1.star;i++)
		{
			System.out.print("★");
		}
		System.out.println();
		re2 re2=new re2();
		re2.poster="https://recipe1.ezmember.co.kr/cache/recipe/2024/11/29/90f0a79083c1000c78cac7882ab984051_m.jpg";
		re2.title="간단간식 데리야끼소스 데리야끼 떡볶이 안매운떡볶이 가래떡떡볶이";
		re2.chef="쿡따라";
		re2.chefpo="https://recipe1.ezmember.co.kr/cache/rpf/2015/12/28/596415237fa788d9a68fa166bca6040b1.png";
		re2.hit=161;
		re2.star=5;
		
		System.out.println("레시피 포스터: "+re2.poster);
		System.out.println("레시피 제목: "+re2.title);
		System.out.println("셰프명: "+re2.chef);
		System.out.println("셰프 포스터 : "+re2.chefpo);
		
		DecimalFormat df2= new DecimalFormat("###,###");
		System.out.println(df2.format(re2.hit));
		for(int i=1;i<=re2.star;i++)
		{
			System.out.print("★");
		}
		
	}

}
