/*
 *  프로그램 : 설계
 *  설계
 *   = 변수 : 데이터
 *   = 메소드 : 기능
 *   ------------
 *   class =====> 메모리에 저장 =====> 활용 =====> 객체소멸
 *   			  객체 / 인스턴스
 *   설계
 *   class 클래스명
 *   {
 *   	사용할 데이터 설정 : 웹 => 상세보기 => 변수
 *   	데이터 활용도 : 메소드
 *   	변수 => 데이터 수집 => 생성자, 초기화 블럭
 *   }
 *   
 *   메모리에 저장=> call by reference
 *   클래스명             객체명 =  new 클래스명()
 *   -----             -----   ----
 *   데이터형 (사용자정의)	변수		클래스
 *   					여러개	크기에 맞게
 *   					변수제어	메모리 생성
 *   							=> 객체명에 생성된 주소를 넘겨준다
 *   							new=>리턴형=>메모리주소(정수형)
 *   							new=>메소드
 *   							int molloc(클래스)
 *   								------메모리 저장>주소리턴
 *   							=>승격 >>new
 *   							메모리해제 > free> delete(사용x)
 *   
 *   객체활용
 *   객체명.변수 , 객페명.메소드...
 *   
 *   객체소멸
 *   객체명=null
 *   
 *   => 생명주기
 *   설계  >> 저장 >> 활용 >> 소멸
 *   ------------------------
 *   소멸 => 가비지컬렉션 바로 회수하지 못한다 => 프로그램 종료후 회수
 *   => 윈도우/웹=> 최적화
 *   -------------------------------------------------
 *   눈에 보이거나 가상 => 객체화
 *   ---------현실세계 - 비현실세계도 객체화 ===> 시물레이션
 *   -------------------------------------------------
 *   | 개발자만 알면된다
 *   | 개발자마다 변수설정 / 메소드 설정이 다르다
 *   | 중요한 데이터는 감춰져있다
 *   
 *   1) 메모리 저장
 *   	--------
 *   	언제까지 사용 가능
 *   	=> 인스턴스 / 정적변수 / 지역변수 / 매개변수
 *   	   -------------- ----------------
 *   		프로그램 종료시		메소드 종료시
 *   	어느 클래스에서 접근 가능
 *   	=> 인스턴스 / 정적변수 / 지역변수 / 매개변수
 *   	   -------------- ----------------
 *   		다른 클래스까지		메소드 안에서만 사용가능
 *   		= 전체 클래스에서 사용
 *   		= 같은 폴더에서
 *   		= 자신 클래스
 *   		 -----------제어어 => 접근지정어
 *   
 *   2) 변수 => 필요시마다 초기화
 *   			생성자 / 초기화 블럭
 *   ======> 변수는 메모리 공간
 *   		 -------------값설정 = 초기화
 *   		1) 기본 초기값
 *   		2) 초기값 지정
 *   		  -----------------class 블럭에서 가능
 *   		3) 외부값을 읽어 초기화(크롤링, 오라클, 파일)
 *   		4) 입력값을 받아 초기화
 *   		  -----------------class 블럭에서 사용불가
 *   			=> 생성자 / 초기화블럭
 *   		*** class classname
 *   			{
 *    				1.선언
 *    					=> 기본값으로 초기화
 *    						int =0 / long =0L / double =0.0 / boolean =false / String =null
 *    				2.선언과 동시에 값 지정
 *    					int a=10; => 명시적초기화
 *    					=> 연산처리, 메소드 호출, 제어문 사용 불가 =>구현부
 *    						구현부는 메소드 안, {} 안에서 사용가능
 *    			예) int a;
 *    			   a=10;  ===> 오류
 *    
 *    				int a=10;  => 가능
 *    
 *    				int a;{ a=10;} => 사용가능
 *    						|인스턴스 블럭
 *   			}
 *   
 *   
 *   3) 관리 시작
 *   	= 추가 / 변경 / 읽기 => 메소드(기능)
 *   
 *   *** 클래스 <=> 클래스
 *   			| 메소드, 멤버변수 => 메모리에 있는 데이터 공유
 *  
 *   클래스 영역에 선언되는 변수
 *   1) 인스턴스 변수 : new를 사용할 때마다 따로 저장되는 변수
 *   				---
 *   				클래스는 한 개에 대한 정보를 저장할 수 있게 만든다  ex. 음악정보,영화정보,사원정보,맛집정보,레시피..
 *   				--------------------------------------------------------------------------
 *   				--> 다른 메모리에 따로 저장이 가능하게 만든다
 *   				--> 중복을 어떻게 제거할것이냐
 *   
 *   2) 정적변수(static) : 공통으로 사용하는 변수 
 *   					동시에 변수값을 변경하고 싶을 때 사용
 *   					웹 > 사용빈도 낮음
 *   					메소드 > 모든 영역에 적용
 *   					--------------한글 변환
 *   		브라우저 =======> 자바 ======> 브라우저
 *   		1바이트		  2바이트		   1바이트
 *   			
 */
public class 클래스_7 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
