/*
 *   데이터 저장 =============> 데이터 가공 ===================> 결과값 출력
 *   --------				 --------					   | 브라우저
 *   						 연산자/제어문					   | 핸드폰
 *   변수 => 묶어서 한 개 이름으로 제어							   | 윈도우
 *   ---------------------------------------------------------------
 *   관련된 데이터를 묶어서 사용 : 배열 / 클래스
 *   관련된 명령문을 묶어서 사용 : 메소드
 *   ----------------------------------------- 자바의 기본 형식
 *   ==> 객체지향 프로그램(5장)
 *   배열 : 관련된 데이터를 여러개 모아서 한 개의 이름으로 관리
 *   ---
 *    1) 장점 : 여러개 변수를 한 번에 처리 가능
 *    	  	   ------------------
 *    			연속적인 메모리 구조 => 메모리 크기 동일
 *    			=> 같은 데이터형만 모아 관리
 *    2) 단점 : 가변형 (컬렉션)
 *    	 => 한번 선언하면 추가/삭제가 어렵다
 *    				  ------->> 새롭게 큰 배열 생성
 *    				  ------->>> 작은 배열 생성
 *    => 같은 종류의 변수가 3개 이상이면 => 배열
 *    
 *   1. 배열 생성
 *   	데이터형[] 배열명; >> 권장
 *   	데이터형 배열멸[]; 
 *   2. 배열 초기화 => 값을 지정
 *   	=> 지역변수 (메소드 안에 선언하는 변수)
 *   			==========> main
 *    	=> 클래스 : 멤버변수 (자동초기화)
 *   	1) 선언과 동시애 초기화
 *   		=> 초기값을 지정 => 명시적 초기화
 *   			int[] arr ={1,2,3,4,5}; => 데이터 검색 => 데이터 고정
 *   			=> String => 크롤링
 *   		=> 기본데이터로 초기화 => 기본 데이터값 설정
 *   			int[] arr= new int[5] : 가장 많이 사용되는 형태
 *   							  --- 저장 갯수
 *   			=> 정수 5개를 모아서 관리
 *   			   ------ 0값으로 초기화 된다
 *   			=> new를 이용하면 => 새로운 메모리를 만든다
 *   			   -----------
 *   				정수 : byte> 0 int> 0 long> 0L
 *   				실수 : float> 0.0F double> 0.0
 *   				논리 : boolean> false
 *   				문자 : char> '\u00000' =>' '
 *   				문자열 :String> null > 저장된 주소가 없는 상태
 *   		-------------모든 클래스는 디폴트값이 null--------------
 *   		*** 배열
 *   		int[] 배열명
 *   		double[] 배열명
 *   		String[] 배열명
 *   		char[] 배열명
 *    		boolean[] 배열명
 *    			   --
 *    		=> 선언시 저장 갯수 확인
 *    		int[] arr={1,2,3,4,5}; => 5개 저장
 *    		int[] arr=new int[5]
 *							 --- 갯수 ===> 고정
 *							 --- 저장된 값은 변경 가능
 *							 --- 메모리 크기를 변경할 수 없다
 *								-------------- Arraycopy
 *								-------------- 새로운 배열
 *							 ------ 얕은 복사 / 깊은 복사
 *									-------  -------
 *								 같은 주소 이용  새로운 배열 생성 =>clone()
 *   	2) 선언 후 초기화
 *   	   int[] arr;
 *         => arr=new int[]{1,2,3,4,5}; => 메소드 이동
 *         
 *      3) 출력(데이터 읽기)
 *      	int[] arr={1,2,3,4,5}
 *      	= 일반 for문 이용 > 인덱스 이용
 *      		for(int i=0;i<arr.lenght;i++)
 *      		{
 *      			sysout(arr[i])
 *      		}
 *      
 *      	= 향상된 for문 이용 > 실제 배열에 저장된 데이터 읽기
 *      		브라우저 출력시에 사용되는 for문
 *      		=> 변경 불가능 ===> 출력만 가능
 *         		for(int i:arr)
 *      		{
 *      			sysout(i)
 *      		}
 *      
 *      	= 라이브러리 이용
 *      		sysout(Arrays.toString(배열명))
 *      
 *      4) 메모리에 저장되는 과정 (메모리 주소를 참조해서 데이터 관리=> 참조변수)
 *      	int[] arr=new int[5]
 *      	--------- ----------
 *      	stack (데이터가 있는 메모리 주소)	Heap (실제 데이터가 저장된 메모리)
 *      
 *      	-------arr--------
 *      	null =>주소 배정x
 *       	------------------			 arr[0] [1] [2] [3] [4]
 *       	 								------------------
 *       									0 | 0 | 0 | 0 | 0
 *         	-------arr-------- 			   |------------------
 *      	 0X100 ========>			 0X100=>가상	
 *       	------------------				   arr[0] => 0X100의 첫번째 값
 *       									   arr[1] => 0X100의 두번째 값
 *       										...
 *       									   => 첫번째부터 자동으로 인덱스/첨자를 붙여 사용
 *       									   => 인덱스를 이용하는 프로그램
 *       										  ----- 0부터~ 항상 순차적이다 >> 반복문 사용이 편리하다
 *       										  ----- 0부터 => 갯수보다 한 개가 작다(배열명.length-1)
 *       									   => 배열명[0]
 *       										  배열명[1]	
 *       										  -----------일반 변수와 동일하게 사용
 *       										  값 읽기 => 배열명[0]
 *       										  값 변경 => 배열명[0] =100
 *       									   => 여러개의 변수/클래스 => 사용하기 어렵다
 *       										  --------------
 *       										  |배열  |인터페이스
 *       										  |한 개의 이름으로 통일
 *       									=> 데이터 묶기
 *       										=> 연속적인 메모리 구조 => 데이터 크기 동일해야 한다
 *       										=> 한 번 선언하면 변경이 어렵다
 *       										   --------------------고정적 메모리 구조
 *       											|보완 => 라이브러리 지원(collection)
 *       															   ----------10장 > 웹에서 주로 사용
 */	
import java.util.Arrays;
// 86 페이지 > 배열생성 /초기화
// 87 페이지 > 배열 선언
// 88 페이지 > 선언과 동시에 초기화 =>new
// 89 페이지 > 메모리 저장
// 92 페이지 > 향상된 for문
// 95 페이지 > 데이터형의 변환
// long[]arr={1,2,3,4,5,6}
			//------------ long으로 변경
// => 86~96 페이지
public class 배열_1 {
	// 멤버면수  >> 다른 클래스에서도 사용가능  =>heap
	// 프로그램 종료시까지 사용 가능
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 지역변수  >> 메인에서만 사용 가능 =>stack
		// 메인이 종료되면 자동종료
		// 정수 / 문자 /문자열
		// 1. 정수 10개 저장 후 평균 구하기 > 반복문 사용=>배열사용
		
		int []arr=new int[10];
		for(int i=0;i<arr.length;i++)
		{
			arr[i]=(int)(Math.random()*100)+1;
		}
		System.out.println(Arrays.toString(arr));
		
		double avg=0.0; //C언어와 다른점
		/*
		 * 시작과 동시에 사용하는 모든 변수 선언
		 */

		int sum=0;
		for(int i:arr)
		{
			sum+=i;
		}
		String re=String.format("%.2f",sum/10.0);
		System.out.println(re);
		
		
		
		
		
		
		
		
		

	}

}
