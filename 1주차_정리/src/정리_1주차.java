/*
 *  1장 : 자바 특징 / 설치 / 주의점
 *               ===jdk.java.net/17
 *               classpath:.;c;\jdk-17.0.2\lib
 *               path :c:\jdk-17.0.2\bin
 *               
 *               > 대소문자 구분
 *               > 들여쓰기
 *               > 주석 : 프로그램 분석
 *               > ctrl+shift+/ 여러줄 주석
 *                 ctrl+shift+\ 주석 해제
 *                 
 *                 ctrl+/ 한 줄 주석
 *                 ctrl+\ 한 줄 주석 해제
 *                 ctrl+space : 자동완성
 *       === 호환성 , 메모리 자동 회수(가비지컬렉션) , 멀티쓰레드
 *  
 *  2장 : 변수 / 연산자
 *        ==
 *        1) 한개의 데이터를 저장하는 메모리 공간의 별칭
 *                           =====주소
 *          >> 역할 : 쓰기(메모리 저장=대입) int a=10
 *                   읽기                  a
 *                   수정                  a=100
 *              >> 변경이 가능한 값  / 변경이 안 되는 값(상수)
 *                 변수)               상수)
 *                  데이터형 변수명;       final 데이터형 변수명;  > 오류발생 변수명후에 값을 줘야함 final 데이터형변수명=10; (0)
 *                                                        > 배열의 갯수
 *                                                        > 데이터형의 최대값-최소값
 *        2) 메모리 크기 결정
 *           >> 기본형  /  참조형
 *             ====      =====
 *            자바지원     사용자 정의---> class
 *           정수형
 *            byte : 1byte , 네트워크 전송 , 파일 읽기
 *                  -128~127
 *                  ** =8bit
 *                       ---0과1을 채우는 공간
 *                ( ) 1  1  1  1  1  1  1
 *                    64 32	16 8  4	 2	1	
 *                    =================== +127	
 *                === 부호 (음수 : 1, 양수 : 0)      
 *             int : 4byte >> 컴퓨터의 모든 정수는 int
 *                -21억4천~21억4천
 *             long :8byte > 10L
 *           문자형
 *             char : 2byte , 0~65535 >> 멀티바이트(unicode)
 *                    => 표기법 '' > 한글자만 
 *                            ==
 *                        >> 한글자만 저장가능하여 불편 > 여러개 동시 저장
 *                                                -----------
 *                                                String : 문자열""        
 *           실수형
 *             double : 8byte > 소수점 15자리까지
 *           논리형 
 *             boolean : 1byte > true / false
 *             
 *             byte< char < int < long < double
 *           -------------------------------------------------------
 *         >>> 식별자 (26페이지)
 *         1) 알파벳, 한글로 시작
 *            --대소문자 구분
 *            --한글(자바), 웹에서는 알파벳
 *         2) 변수의 길이 > 제한x (3~10글자사이)
 *         3) 숫자사용 가능( 앞에 사용은 불가능)
 *         4) 특수문자사용 가능 (_, $)
 *            _ : 임시변수, 임시클래스, 여러개 단어 사용할 경우 구분자로 사용
 *         5) 공백 사용불가
 *         6) 키워드 사용불가 (int, class등)
 *         7) 약속 사항
 *            변수, 메소드  >> 소문자 시작
 *            클래스, 인터페이스  >> 대문자 시작
 *            상수 >> 대문자 사용
 *            
 *      >>>>>> 변수 / 상수 / 메소드 / 클랫 / 인터페이스 / 추상클래스
 *             ========================================== 식별자 적용         
 *      >>>> 변수 선언
 *            데이터형 변수명;
 *            (정수,문자,실수,논리)
 *            
 *      >>>> 변수 초기화
 *            1. 정수형
 *             byte b=10;    > ~127
 *                   ---일반숫자
 *             int i=10;     > ~21억4천
 *             char a='A'    > 한글도 가능
 *                    ''     > null 오류! 공백줘야함
 *             long l=10L;   > 대입하는 수가 21억4천을 넘는다면 l(L)를 적용    
 *            2. 실수형
 *             double d=10.0D > D는 생략 가능
 *            3. 논리형
 *             boolean b=true/false
 *             
 *             *** main()
 *             {
 *               변수 =>> 지역변수
 *                       ** 자동 초기화가 안 된다. 반드시 초기값을 설정 후 사용해야한다
 *             }
 *             변수  > 변수가 없으면 프로그램제어가 어렵다
 *             = 지역변수
 *             = 멤버변수
 *                - 인스턴스변수
 *                - 공유변수
 *              자바 / 자바스크립트 ...   >>> 데이터 관리 프로그램 
 *                                      ================
 *                                      1. 변수 : 한개 저장
 *                                      2. 배열 : 여러개 저장
 *                                           > 같은 데이터형만
 *                                      3. 클래스 : 여러개 저장
 *                                           > 다른 데이터형
 *                                      =========== 저장공간 : 메모리
 *                                      4. 파일
 *                                      5. RDBMS : 오라클
 *                                         오라클 / mySQL / mariaDB
 *                    >> 연산자
 *                       - 단항연산자
 *                         ++,-- : 증감연산자 : 1증가, 1감소
 *                         ------- 웹에서 '상세보기', 찜하기, 좋아요
 *                         int a=10;
 *                         a++;  > 후지연산 
 *                          -- 다른 연산을 먼저 수행한다. > 추후 증가
 *                         ++a;  > 전치연산
 *                         --  먼저 증간한다 > 추후 대입
 *                         
 *                          int a=10;
 *                          int b=a++;
 *                           1) 다른 연산 수행   b=a=10
 *                           2) a값 +1증가     a=a+1=11
 *                          int a=10;
 *                          int b=++a;
 *                           1) a값 +1증가     a=a+1=11
 *                           2) 다른 연산 수행   b=a=11
 *                           
 *                         ! (부정연산자)   = boolean만 사용
 *                           boolean b=false;
 *                           !b= true
 *                           > 조건문에서 사용 if,for,while (제어문에서 주로 사용)
 *                           
 *                         형변환연산자 (50페이지)
 *                           > 데이터형의 크기 확인
 *                       다운캐스팅(강제/명시)<====    ====>업캐스팅(자동/묵시)
 *                           byte < char < int < long < double 
 *                             **boolean 은 형변환 불가
 *                            long l=10
 *                                   == int   >>> 자동으로 10l 변경
 *                            int a='A'
 *                                  ==char   >>> 자동으로 int 65 변경
 *                            int a=10.5    >>> 강제로 (int)10.5 변경  > 10
 *                                  =====long   : int < long    
 *                                          
 *                       - 이항연산자 : 가장 많이 사용되는 연산자
 *                         1. 산술연산자 (+,-,*,/,%)
 *                             + : 문자열 결합, 더하기
 *                               "6"+7 = "67"
 *                               7+"6" = "76"
 *                               7+7+"77" = 
 *                               ---먼저
 *                                14+"77" = 1477
 *                                ** 산술규칙
 *                                1. 같은 데이터형만 연산 가능
 *                                   10+10.5= 20.5
 *                                   --
 *                                   10.0 큰데이터형으로 자동변환
 *                                   'A'+10 =75
 *                                   --- --
 *                                  char int
 *                                   'A"=65
 *                                2. int이하 데이터형(byte, char) > 결과값은 int
 *                                   char + char = int
 *                                	 byte + byte = int
 *                                	 char + byte = int  
 *                             / :  0 으로 나눌수 없다 >> 나누는 값이 0인지 여부확인
 *                                                       >> 오류
 *                                  정수/정수=정수   
 *                                  10/3=3
 *                                    > 실수로 나눈다(소수점)                  
 *                             % : 나머지값이 왼쪽 부호를 따라간다
 *                                  5%2=1
 *                                  -5%2=-1
 *                             	 	5%-2=1
 *                             		-5%-2=-1
 *                          2. 비교연산자 > 모든 결과값이 boolean    >  조건문
 *                            		==  : 같다 (오라클 = , 자바스크립트 ===)
 *                          		!=  : 같지않다 (오라클 <> , 자바스크립트 !==)
 *                             ----------------------------boolean  포함
 *                          		<  : 작다
 *                          		>  : 크다
 *                          		<= : 작거나 같다    >  < || ==
 *                          		>= : 크거나 같다    >  > || ==
 *                             ======================== 적용되는 데이터형 숫자,문자만 가능
 *                          3. 논리연산자 결과값 boolean  > 조거문, 반복문
 *                              =======
 *                                 &&  : 직렬연산자 >> 모든 데이터가 true 일 경우 처리  
 *                                 ||  : 병렬연산자 >> true 가 한 개 이상일 경우 처리
 *                              (조건) && (조건)
 *                              ----     ----
 *                                |        |
 *                                ----------
 *                                     |
 *                                    결과값
 *                                 
 *                              (조건) || (조건)
 *                              ----     ----
 *                                |        |
 *                                ----------
 *                                     |
 *                                    결과값 
 *                            조건1   조건2       &&     ||
 *                           =============================
 *                            참     참          참      참
 *                           ==============================
 *                            참    거짓         거짓     참
 *                           ==============================
 *                           거짓    참          거짓     참
 *                           ==============================
 *                           거짓    거짓         거짓    거짓
 *                           ==============================
 *                           효율적인 연산
 *                           ** &&  > 앞의 조건이 거짓이면 뒤의 조건을 처리하지 않는다.
 *                           ** ||  > 앞의 조건이 참이면 뒤의 조건을 처리하지 않는다.
 *                           
 *                           int q=10;
 *                           int w=9;
 *                           q<w %% q==++w
 *                           ----거짓   >> 종료   / 앞의 조건이 거짓이므로 뒤의 조건을 처리하지 않는다.
 *                           int q=10;
 *                           int w=9;
 *                           q>w || q==++w
 *                           ---참     >>  종료  / 앞의 조건이 참이므로 뒤의 조건을 처리하지 않는다.
 *                           
 *                           ** && : 범위 포함
 *                           if(cs>=0 && sc<=100)
 *                           ** || : 범위밖일 경우   > 잘못된 입력
 *                           if(cs<0 || sc>100)
 *                          
 *                          4. 대입연산자
 *                          = : 대입   int a=10;    >> 10을 a에 대입하라
 *                                    int b=20;
 *                                    int c=a+b;   >>a와 b의 더한 값을 c에 대입하라
 *                                   왼쪽>오른쪽 연산처리가 기본, 대입연산자는 오른쪽>왼쪽으로
 *                                   >>>>>> 대입연산자는 연산자 마지막 순서
 *                                 **** 연산자 우선순위
 *                                        산술연산자 : *, /, % -> +, -
 *                                        비교연산자
 *                                        논리연산자 : && ->  ||
 *                                        대입연산자
 *                                     ===> () : 최우선 순위 연산자
 *                      ============================복합대입연산자        
 *                          += : 여러개 증가
 *                          -= : 여러개 감소
 *                          
 *                          int a=10;     5개증가
 *                          a+=5;   =   a=a+5
 *                          int a=10;     5개감소
 *                          a-=5;   =   a=a-5
 *                            >>>> 데이터베이스 연결시 주로 사용
 *                            >>>> 웹에서도 사용
 *                      =============================      
 *                       - 삼항연산자
 *                        > if~else  >> true / false 나눠서 처리
 *                        (조건)?값1:값2
 *                         true > 값1
 *                         false > 값2
 *                          >>> 복잡한 소스가 있는 경우 간결하게 만든다
 *                              웹(HTML+java)
 *                                ==========
 *                        
 *                    --> 사용자 요청에 맞게 출력, 데이터 전송 > 제어문                  
 *                                      
 *  3장 : 제어문
 *  4장 : 배열
 *  5장 : 객체지향 프로그램
 *  6장 : 상속
 *  7장 : 추상클래스 / 인터페이스
 *  8장 : 예외처리
 *  9장 : 라이브러리
 *       **java.util / java.lang / **java.io / java.net / **java.sql
 *  
 *  
 */
import java.util.*;

public class 정리_1주차 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 모든 데이터형에 대한 정보를 가지고 있는 클래스 >>Wrapper
		System.out.println(Integer.MAX_VALUE); //상수 중 최대값
		System.out.println(Integer.MIN_VALUE); // 상수 중 최소값
		System.out.println(Byte.MAX_VALUE); // 바이트 중 최대값
		System.out.println(Byte.MIN_VALUE); // 바이트 중 최소값
		
		
		
		
		
		
		
	}

}
